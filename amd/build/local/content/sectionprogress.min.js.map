{"version":3,"file":"sectionprogress.min.js","sources":["../../../src/local/content/sectionprogress.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Reactive component to show the course progress.\n *\n * @module     format_mawang/local/content/sectionprogress\n * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport {getCurrentCourseEditor} from 'core_courseformat/courseeditor';\nimport Templates from 'core/templates';\n\nexport default class Component extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'courseprogress';\n        // Default query selectors.\n        this.selectors = {\n            CONTAINER: `[data-region=\"courseprogress\"]`,\n        };\n        // Default classes to toggle on refresh.\n        this.classes = {\n            PROGRESSHIDDEN: 'd-none',\n        };\n        // Arrays to keep cms and sections elements.\n        this.wrapper = null;\n        this.progress = null;\n    }\n\n    /**\n     * Static method to create a component instance form the mustache template.\n     *\n     * @param {element|string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        this.addEvents();\n        return new Component({\n            element: document.getElementById(target),\n            reactive: getCurrentCourseEditor(),\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {Object} state the state data\n     */\n    stateReady(state) {\n\n        // Get cms and sections elements.\n        this.wrapper = this.getElement();\n\n        this._refreshCompletion({state: state});\n    }\n\n\n    /**\n     * Update course completion based on the completion of the cms in the sections\n     *\n     * @param {Object} param details the update details.\n     * @param {Object} param.state the state data.\n     */\n    async _refreshCompletion({state}) {\n        if (this.reactive.isEditing) {\n            return;\n        }\n        const containers = this.getElements(this.selectors.CONTAINER);\n        const items = this.reactive.getExporter().allItemsArray(this.reactive.state);\n        const exporter = this.reactive.getExporter();\n        if (items.length === 0) {\n            return;\n        }\n        const rootsections = [];\n        const allsections = [];\n        items.forEach((item) => {\n            if (item.type == 'section') {\n                const section = state.section.get(item.id);\n                allsections.push(section);\n            }\n        });\n\n        const findRootParent = (sections, parentid) => {\n            const parent = sections.find((section) => section.id == parentid);\n            if (parent.parentid) {\n                return findRootParent(sections, parent.parentid);\n            } else {\n                return parent.id;\n            }\n        };\n        allsections.forEach((section) => {\n            if (section.parentid !== 0) {\n                const rootid = findRootParent(allsections, section.parentid);\n                if (!rootsections[rootid]) {\n                    rootsections[rootid] = {\n                        total: 0,\n                        completed: 0,\n                        subsections: [section.id],\n                    };\n                } else {\n                    rootsections[rootid].subsections.push(section.id);\n                }\n            } else {\n                rootsections[section.id] = {\n                    total: 0,\n                    completed: 0,\n                    subsections: [],\n                };\n            }\n        });\n\n        items.every((item) => {\n            if (item.type == 'cm') {\n                const cm = state.cm.get(item.id);\n                // Find the root section of the cm.\n                const rootid = findRootParent(allsections, cm.sectionid);\n                if (cm.visible === false || cm.uservisible === false) {\n                    return true;\n                }\n                const data = exporter.cmCompletion(state, cm);\n                if (data.hasstate !== true) {\n                    return true;\n                }\n\n                rootsections[rootid].total++;\n                if (data.iscomplete) {\n                    rootsections[rootid].completed++;\n                }\n            }\n            return true;\n        });\n\n        containers.forEach(async(container) => {\n            if (rootsections[container.dataset.id]) {\n                const completed = rootsections[container.dataset.id].completed;\n                const total = rootsections[container.dataset.id].total;\n                container.dataset.subsections = rootsections[container.dataset.id].subsections.join(',');\n                if (total === 0) {\n                    return;\n                }\n\n                const progress = Math.round((completed / total) * 100);\n                const circumference = 2 * Math.PI * 35;\n                const dashoffset = circumference - (progress / 100) * circumference;\n\n                const {html, js} = await Templates.renderForPromise('format_mawang/local/content/progress',\n                    {\n                        'progress': progress,\n                        'dashoffset': dashoffset,\n                        'circumference': circumference,\n                        'completed': completed,\n                        'total': total\n                    }\n                );\n                Templates.replaceNodeContents(container, html, js);\n            }\n        });\n    }\n\n    /**\n     * Component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        return [\n            {watch: `cm:updated`, handler: this._refreshCompletion},\n        ];\n    }\n\n    /**\n     * Add events to the component.\n     */\n    static addEvents() {\n        document.addEventListener('click', (event) => {\n            if (event.target.closest('[data-action=\"progressmoreinfo\"]')) {\n                event.preventDefault();\n                const todo = document.querySelector('[data-region=\"progressmoretodo\"]');\n                todo.classList.toggle('show');\n            }\n        });\n    }\n}"],"names":["Component","BaseComponent","create","name","selectors","CONTAINER","classes","PROGRESSHIDDEN","wrapper","progress","target","addEvents","element","document","getElementById","reactive","stateReady","state","this","getElement","_refreshCompletion","isEditing","containers","getElements","items","getExporter","allItemsArray","exporter","length","rootsections","allsections","forEach","item","type","section","get","id","push","findRootParent","sections","parentid","parent","find","rootid","subsections","total","completed","every","cm","sectionid","visible","uservisible","data","cmCompletion","hasstate","iscomplete","async","container","dataset","join","Math","round","circumference","PI","dashoffset","html","js","Templates","renderForPromise","replaceNodeContents","getWatchers","watch","handler","addEventListener","event","closest","preventDefault","querySelector","classList","toggle"],"mappings":";;;;;;;yJA2BqBA,kBAAkBC,wBAKnCC,cAESC,KAAO,sBAEPC,UAAY,CACbC,iDAGCC,QAAU,CACXC,eAAgB,eAGfC,QAAU,UACVC,SAAW,iBAURC,OAAQN,uBACXO,YACE,IAAIX,UAAU,CACjBY,QAASC,SAASC,eAAeJ,QACjCK,UAAU,0CACVX,UAAAA,YASRY,WAAWC,YAGFT,QAAUU,KAAKC,kBAEfC,mBAAmB,CAACH,MAAOA,2CAUXA,MAACA,eAClBC,KAAKH,SAASM,uBAGZC,WAAaJ,KAAKK,YAAYL,KAAKd,UAAUC,WAC7CmB,MAAQN,KAAKH,SAASU,cAAcC,cAAcR,KAAKH,SAASE,OAChEU,SAAWT,KAAKH,SAASU,iBACV,IAAjBD,MAAMI,oBAGJC,aAAe,GACfC,YAAc,GACpBN,MAAMO,SAASC,UACM,WAAbA,KAAKC,KAAmB,OAClBC,QAAUjB,MAAMiB,QAAQC,IAAIH,KAAKI,IACvCN,YAAYO,KAAKH,mBAInBI,eAAiB,CAACC,SAAUC,kBACxBC,OAASF,SAASG,MAAMR,SAAYA,QAAQE,IAAMI,kBACpDC,OAAOD,SACAF,eAAeC,SAAUE,OAAOD,UAEhCC,OAAOL,IAGtBN,YAAYC,SAASG,aACQ,IAArBA,QAAQM,SAAgB,OAClBG,OAASL,eAAeR,YAAaI,QAAQM,UAC9CX,aAAac,QAOdd,aAAac,QAAQC,YAAYP,KAAKH,QAAQE,IAN9CP,aAAac,QAAU,CACnBE,MAAO,EACPC,UAAW,EACXF,YAAa,CAACV,QAAQE,UAM9BP,aAAaK,QAAQE,IAAM,CACvBS,MAAO,EACPC,UAAW,EACXF,YAAa,OAKzBpB,MAAMuB,OAAOf,UACQ,MAAbA,KAAKC,KAAc,OACbe,GAAK/B,MAAM+B,GAAGb,IAAIH,KAAKI,IAEvBO,OAASL,eAAeR,YAAakB,GAAGC,eAC3B,IAAfD,GAAGE,UAAwC,IAAnBF,GAAGG,mBACpB,QAELC,KAAOzB,SAAS0B,aAAapC,MAAO+B,QACpB,IAAlBI,KAAKE,gBACE,EAGXzB,aAAac,QAAQE,QACjBO,KAAKG,YACL1B,aAAac,QAAQG,mBAGtB,KAGXxB,WAAWS,SAAQyB,MAAAA,eACX3B,aAAa4B,UAAUC,QAAQtB,IAAK,OAC9BU,UAAYjB,aAAa4B,UAAUC,QAAQtB,IAAIU,UAC/CD,MAAQhB,aAAa4B,UAAUC,QAAQtB,IAAIS,SACjDY,UAAUC,QAAQd,YAAcf,aAAa4B,UAAUC,QAAQtB,IAAIQ,YAAYe,KAAK,KACtE,IAAVd,mBAIEpC,SAAWmD,KAAKC,MAAOf,UAAYD,MAAS,KAC5CiB,cAAgB,EAAIF,KAAKG,GAAK,GAC9BC,WAAaF,cAAiBrD,SAAW,IAAOqD,eAEhDG,KAACA,KAADC,GAAOA,UAAYC,mBAAUC,iBAAiB,uCAChD,UACgB3D,oBACEuD,yBACGF,wBACJhB,gBACJD,2BAGPwB,oBAAoBZ,UAAWQ,KAAMC,QAU3DI,oBACW,CACH,CAACC,mBAAqBC,QAAStD,KAAKE,wCAQxCP,SAAS4D,iBAAiB,SAAUC,WAC5BA,MAAMhE,OAAOiE,QAAQ,oCAAqC,CAC1DD,MAAME,iBACO/D,SAASgE,cAAc,oCAC/BC,UAAUC,OAAO"}