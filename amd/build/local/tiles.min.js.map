{"version":3,"file":"tiles.min.js","sources":["../../src/local/tiles.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tile controls\n *\n * @module     format_mawang/local/tiles\n * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Set the container grid styles for the sectioncontent. The Tiles are rendered in a grid layout of 3 columns,\n * 2 columns or 1 column depending on the screen width.\n * The sectioncontent should always be positioned in the grid row under the tilesection and take up the full width.\n * @param {HTMLElement} tilesection\n * @param {HTMLElement} sectioncontent\n */\nexport const setGridStyles = (tilesection, sectioncontent) => {\n    const alltilesections = document.querySelectorAll('[data-region=\"tilesection\"]');\n    // Where is the tilesection in the grid?\n    const grid = tilesection.closest('.tilesections');\n    const gridwidth = grid.offsetWidth;\n    const tileWidth = tilesection.offsetWidth;\n\n    // How many tiles are in a row?\n    const tilesectiontotal = Math.floor(gridwidth / tileWidth);\n\n    // In which row is the tilesection?\n    let tilesectionrow = 0;\n    alltilesections.forEach((tile, index) => {\n        if (tile === tilesection) {\n            tilesectionrow = Math.floor(index / tilesectiontotal);\n        }\n    });\n    // Set the grid styles for the sectioncontent\n    sectioncontent.style.gridRow = tilesectionrow + 2;\n    // Let the sectioncontent take up all columns\n    sectioncontent.style.gridColumn = '1 / -1';\n};\n\n/**\n * Open and close the sectioncontent\n * @param {HTMLElement} tiletoggle\n * @param {boolean} toggle\n */\nexport const showSection = (tiletoggle, toggle = true) => {\n    const button = tiletoggle;\n    const sectionid = button.dataset.number;\n    const tilesection = document.querySelector('[data-region=\"tilesection\"][data-number=\"' + sectionid + '\"]');\n    const tile = tilesection.querySelector('.tiletoggle');\n    const sectioncontent = document.querySelector('[data-region=\"sectioncontent\"][data-sectionid=\"' + sectionid + '\"]');\n    const closebutton = sectioncontent.querySelector('.btn-close[data-action=\"tiletoggle\"]');\n    // Remove show from all other sectioncontents\n    const sectioncontents = document.querySelectorAll('[data-region=\"sectioncontent\"]');\n    sectioncontents.forEach((section) => {\n        if (section !== sectioncontent) {\n            section.classList.remove('show');\n        }\n    });\n    const alltilesections = document.querySelectorAll('[data-region=\"tilesection\"]');\n    alltilesections.forEach((tile) => {\n        if (tile !== tilesection) {\n            tile.classList.remove('show');\n        }\n    });\n\n    if (toggle) {\n        sectioncontent.classList.toggle('show');\n        tilesection.classList.toggle('show');\n    } else {\n        sectioncontent.classList.add('show');\n        tilesection.classList.add('show');\n    }\n\n    setGridStyles(tilesection, sectioncontent);\n    if (tiletoggle.dataset.keypressed === 'true') {\n        setTimeout(() => {\n            if (sectioncontent.classList.contains('show') && closebutton) {\n                closebutton.focus();\n            } else {\n                tile.focus();\n            }\n        }, 300);\n    }\n    tiletoggle.dataset.keypressed = 'false';\n};\n\nconst navigateToSection = (sectionid) => {\n    let button = document.querySelector(`[data-action=\"tiletoggle\"][data-number=\"${sectionid}\"]`);\n    if (button) {\n        showSection(button, false);\n    } else {\n        const subsection = document.querySelector(`.course-section[data-number=\"${sectionid}\"]`);\n        const parentId = subsection?.closest('[data-region=\"sectioncontent\"]')?.dataset.sectionid;\n        if (parentId) {\n            button = document.querySelector(`[data-action=\"tiletoggle\"][data-number=\"${parentId}\"]`);\n            if (button) {\n                showSection(button, false);\n            }\n        }\n    }\n};\n\n/**\n * Initialize the tile toggles\n */\nexport const init = () => {\n    document.addEventListener('click', (event) => {\n        if (event.target.closest('.tilesections [data-action=\"tiletoggle\"]')) {\n            const tiletoggle = event.target.closest('.tilesections [data-action=\"tiletoggle\"]');\n            showSection(tiletoggle);\n\n            // Update the page URL, set the hash to the sectionid\n            const sectionid = tiletoggle.dataset.number;\n            window.location.hash = `section-${sectionid}`;\n        }\n        if (event.target.closest('.courseindex-link[data-for=\"section_title\"]')) {\n            const sectionid = event.target.closest('.courseindex > .courseindex-section')?.dataset.number;\n            if (sectionid) {\n                navigateToSection(sectionid);\n            }\n        }\n    });\n    document.addEventListener('keydown', (event) => {\n        if (event.key === 'Enter' && event.target.closest('.tilesections .tiletoggle[data-action=\"tiletoggle\"]')) {\n            const tiletoggle = event.target.closest('.tilesections .tiletoggle[data-action=\"tiletoggle\"]');\n            tiletoggle.dataset.keypressed = 'true';\n            showSection(tiletoggle);\n\n            // Update the page URL, set the hash to the sectionid\n            const sectionid = tiletoggle.dataset.number;\n            window.location.hash = `section-${sectionid}`;\n        }\n    });\n    // On resize, reset the grid styles for the sectioncontent and tilesection that are shown\n    window.addEventListener('resize', () => {\n        const sectioncontent = document.querySelector('.tilesections .show[data-region=\"sectioncontent\"]');\n        const tilesection = document.querySelector('.tilesections .show[data-region=\"tilesection\"]');\n        if (sectioncontent && tilesection) {\n            setGridStyles(tilesection, sectioncontent);\n        }\n    });\n    // On load check if the hash is set and click the corresponding tiletoggle button\n    const hash = window.location.hash;\n    if (hash) {\n        const sectionid = hash.replace('#section-', '');\n        navigateToSection(sectionid);\n    }\n};"],"names":["setGridStyles","tilesection","sectioncontent","alltilesections","document","querySelectorAll","gridwidth","closest","offsetWidth","tileWidth","tilesectiontotal","Math","floor","tilesectionrow","forEach","tile","index","style","gridRow","gridColumn","showSection","tiletoggle","toggle","button","sectionid","dataset","number","querySelector","closebutton","sectioncontents","section","classList","remove","add","keypressed","setTimeout","contains","focus","navigateToSection","subsection","parentId","_subsection$closest","addEventListener","event","target","window","location","hash","_event$target$closest","key","replace"],"mappings":";;;;;;;;MA8BaA,cAAgB,CAACC,YAAaC,wBACjCC,gBAAkBC,SAASC,iBAAiB,+BAG5CC,UADOL,YAAYM,QAAQ,iBACVC,YACjBC,UAAYR,YAAYO,YAGxBE,iBAAmBC,KAAKC,MAAMN,UAAYG,eAG5CI,eAAiB,EACrBV,gBAAgBW,SAAQ,CAACC,KAAMC,SACvBD,OAASd,cACTY,eAAiBF,KAAKC,MAAMI,MAAQN,sBAI5CR,eAAee,MAAMC,QAAUL,eAAiB,EAEhDX,eAAee,MAAME,WAAa,qDAQzBC,YAAc,SAACC,gBAAYC,wEAC9BC,OAASF,WACTG,UAAYD,OAAOE,QAAQC,OAC3BzB,YAAcG,SAASuB,cAAc,4CAA8CH,UAAY,MAC/FT,KAAOd,YAAY0B,cAAc,eACjCzB,eAAiBE,SAASuB,cAAc,kDAAoDH,UAAY,MACxGI,YAAc1B,eAAeyB,cAAc,wCAE3CE,gBAAkBzB,SAASC,iBAAiB,kCAClDwB,gBAAgBf,SAASgB,UACjBA,UAAY5B,gBACZ4B,QAAQC,UAAUC,OAAO,iBAG3B7B,gBAAkBC,SAASC,iBAAiB,+BAClDF,gBAAgBW,SAASC,OACjBA,OAASd,aACTc,KAAKgB,UAAUC,OAAO,WAI1BV,QACApB,eAAe6B,UAAUT,OAAO,QAChCrB,YAAY8B,UAAUT,OAAO,UAE7BpB,eAAe6B,UAAUE,IAAI,QAC7BhC,YAAY8B,UAAUE,IAAI,SAG9BjC,cAAcC,YAAaC,gBACW,SAAlCmB,WAAWI,QAAQS,YACnBC,YAAW,KACHjC,eAAe6B,UAAUK,SAAS,SAAWR,YAC7CA,YAAYS,QAEZtB,KAAKsB,UAEV,KAEPhB,WAAWI,QAAQS,WAAa,gDAG9BI,kBAAqBd,gBACnBD,OAASnB,SAASuB,gEAAyDH,oBAC3ED,OACAH,YAAYG,QAAQ,OACjB,+BACGgB,WAAanC,SAASuB,qDAA8CH,iBACpEgB,SAAWD,MAAAA,wCAAAA,WAAYhC,QAAQ,wEAApBkC,oBAAuDhB,QAAQD,UAC5EgB,WACAjB,OAASnB,SAASuB,gEAAyDa,gBACvEjB,QACAH,YAAYG,QAAQ,oBAShB,KAChBnB,SAASsC,iBAAiB,SAAUC,WAC5BA,MAAMC,OAAOrC,QAAQ,4CAA6C,OAC5Dc,WAAasB,MAAMC,OAAOrC,QAAQ,4CACxCa,YAAYC,kBAGNG,UAAYH,WAAWI,QAAQC,OACrCmB,OAAOC,SAASC,uBAAkBvB,cAElCmB,MAAMC,OAAOrC,QAAQ,+CAAgD,iCAC/DiB,wCAAYmB,MAAMC,OAAOrC,QAAQ,+EAArByC,sBAA6DvB,QAAQC,OACnFF,WACAc,kBAAkBd,eAI9BpB,SAASsC,iBAAiB,WAAYC,WAChB,UAAdA,MAAMM,KAAmBN,MAAMC,OAAOrC,QAAQ,uDAAwD,OAChGc,WAAasB,MAAMC,OAAOrC,QAAQ,uDACxCc,WAAWI,QAAQS,WAAa,OAChCd,YAAYC,kBAGNG,UAAYH,WAAWI,QAAQC,OACrCmB,OAAOC,SAASC,uBAAkBvB,eAI1CqB,OAAOH,iBAAiB,UAAU,WACxBxC,eAAiBE,SAASuB,cAAc,qDACxC1B,YAAcG,SAASuB,cAAc,kDACvCzB,gBAAkBD,aAClBD,cAAcC,YAAaC,yBAI7B6C,KAAOF,OAAOC,SAASC,QACzBA,KAAM,OACAvB,UAAYuB,KAAKG,QAAQ,YAAa,IAC5CZ,kBAAkBd"}